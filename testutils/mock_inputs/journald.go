// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/inputs/journald.go

// Package mock_inputs is a generated GoMock package.
package mock_inputs

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	inputs "github.com/sinkingpoint/clogger/internal/inputs"
)

// MockJournalDReader is a mock of JournalDReader interface.
type MockJournalDReader struct {
	ctrl     *gomock.Controller
	recorder *MockJournalDReaderMockRecorder
}

// MockJournalDReaderMockRecorder is the mock recorder for MockJournalDReader.
type MockJournalDReaderMockRecorder struct {
	mock *MockJournalDReader
}

// NewMockJournalDReader creates a new mock instance.
func NewMockJournalDReader(ctrl *gomock.Controller) *MockJournalDReader {
	mock := &MockJournalDReader{ctrl: ctrl}
	mock.recorder = &MockJournalDReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJournalDReader) EXPECT() *MockJournalDReaderMockRecorder {
	return m.recorder
}

// GetEntry mocks base method.
func (m *MockJournalDReader) GetEntry() (inputs.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEntry")
	ret0, _ := ret[0].(inputs.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEntry indicates an expected call of GetEntry.
func (mr *MockJournalDReaderMockRecorder) GetEntry() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEntry", reflect.TypeOf((*MockJournalDReader)(nil).GetEntry))
}
